{"version":3,"sources":["types/types.js","principal/PrincipalReducer.js","principal/PrincipalContext.js","apiKeys.js","environments/environments.js","helpers/getMyLocation.js","helpers/getWeather.js","principal/PrincipalState.js","components/HomePrincipalLocation.js","helpers/capitalizeLetter.js","components/HomePrincipalContainer.js","components/HomePrincipalPorcentajeCircularItem.js","components/HomePrincipalPorcentajeCircular.js","components/HomePrincipalPronosticoSemanalItem.js","components/HomePrincipalPronosticoSemanal.js","options/language.js","components/FormularioLanguageItems.js","components/FormularioOptions.js","screens/HomeScreen.js","routers/AppRouter.js","App.js","index.js"],"names":["types","PrincipalReducer","stateActual","action","type","options","data","myLocation","myLocationWeather","loading","myLocationWeatherForecast","PrincipalContext","createContext","API_KEY_OPENWEATHERMAP","process","URL_GET_WEATHER","getMyLocation","a","fetch","resp","json","getWeatherByLocation","location","units","lang","getWeatherForecastByLocation","lat","lon","PrincipalState","props","useReducer","idLanguage","metric","metricSymbol","state","dispatch","getCurrentWeatherForecastByLocation","then","newDaily","daily","filter","value","index","length","useEffect","message","console","log","ip","country","country_name","stateProv","state_prov","countryFlag","country_flag","currentTime","time_zone","current_time_unix","longitude","coord","latitude","temp","main","tempMin","temp_min","tempMax","temp_max","feelsLike","feels_like","pressure","icon","weather","description","percentage","title","humidity","clouds","all","Provider","setOptions","objeto","idLang","metrica","simbolo","children","HomePrincipalLocation","useContext","className","src","alt","moment","unix","format","capitalizeLetter","str","charAt","toUpperCase","slice","HomePrincipalContainer","Math","round","HomePrincipalPorcentajeCircularItem","circular","strokeWidth","strokeLinecap","primaryColor","secondaryColor","fontSize","HomePrincipalPorcentajeCircular","map","id","HomePrincipalPronosticoSemanalItem","forecast","dt","style","width","max","min","HomePrincipalPronosticoSemanal","languages","FormularioLanguageItems","memo","language","FormularioOptions","useState","formulario","setFormulario","handleChange","e","valor","target","simb","name","onSubmit","preventDefault","onChange","HomeScreen","AppRouter","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fcc0921.chunk.js","sourcesContent":["export const types = {\r\n    options: '[principal] options',\r\n    myLocation: '[principal] myLocation',\r\n    myLocationWeather: '[principal] myLocationWeather',\r\n    myLocationWeatherForecast: '[principal] myLocationWeatherForecast',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const PrincipalReducer = (stateActual = {}, action) => {\r\n    switch (action.type) {\r\n        case types.options:\r\n            return {\r\n                ...stateActual,\r\n                options: action.data.options\r\n            }\r\n\r\n        case types.myLocation:\r\n            return {\r\n                ...stateActual,\r\n                myLocation: action.data.myLocation,\r\n            }\r\n\r\n        case types.myLocationWeather:\r\n            return {\r\n                ...stateActual,\r\n                myLocationWeather: action.data.myLocationWeather,\r\n                loading: false\r\n            }\r\n\r\n        case types.myLocationWeatherForecast:\r\n            return {\r\n                ...stateActual,\r\n                myLocationWeatherForecast: action.data.myLocationWeatherForecast\r\n            }\r\n\r\n        default:\r\n            return stateActual;\r\n    }\r\n}\r\n","import { createContext } from 'react';\r\n\r\nconst PrincipalContext = createContext();\r\n\r\nexport default PrincipalContext;","// https://ipgeolocation.io/\r\nexport const API_KEY_IPGEOLOCATION = process.env.REACT_APP_API_KEY_IPGEOLOCATION;\r\n\r\n// https://openweathermap.org/\r\nexport const API_KEY_OPENWEATHERMAP = process.env.REACT_APP_API_KEY_OPENWEATHERMAP;\r\n","export const URL_GET_IP = 'https://api.ipify.org?format=json';\r\nexport const URL_GET_LOCATION = 'https://api.ipgeolocation.io';\r\nexport const URL_GET_WEATHER = 'https://api.openweathermap.org/data/2.5';\r\n\r\n// export const URL_GET_LOCATION = 'http://ip-api.com/json';","import { API_KEY_IPGEOLOCATION } from \"../apiKeys\";\r\nimport { URL_GET_LOCATION } from \"../environments/environments\";\r\n\r\nexport const getMyLocation = async () => {\r\n    // console.log(\"PROCEES\",process.env.REACT_APP_API_KEY_IPGEOLOCATION);\r\n    const resp = await fetch(`${URL_GET_LOCATION}/ipgeo?apiKey=${API_KEY_IPGEOLOCATION}`);\r\n    const data = await resp.json();\r\n\r\n    return data;\r\n}\r\n","import { API_KEY_OPENWEATHERMAP } from \"../apiKeys\";\r\nimport { URL_GET_WEATHER } from \"../environments/environments\";\r\n\r\n\r\nexport const getWeatherByLocation = async (location, units, lang) => {\r\n    const resp = await fetch(`${URL_GET_WEATHER}/weather?q=${location}&units=${units}&lang=${lang}&appid=${API_KEY_OPENWEATHERMAP}`);\r\n    const data = await resp.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport const getWeatherForecastByLocation = async (lat, lon, units, lang) => {\r\n    const resp = await fetch(`${URL_GET_WEATHER}/onecall?lat=${lat}&lon=${lon}&units=${units}&lang=${lang}&appid=${API_KEY_OPENWEATHERMAP}`);\r\n    const data = await resp.json();\r\n\r\n    return data;\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport { PrincipalReducer } from './PrincipalReducer';\r\nimport PrincipalContext from './PrincipalContext';\r\nimport { types } from '../types/types';\r\n\r\nimport { getMyLocation } from '../helpers/getMyLocation';\r\nimport { getWeatherByLocation, getWeatherForecastByLocation } from '../helpers/getWeather';\r\n\r\nexport const PrincipalState = (props) => {\r\n\r\n    const [state, dispatch] = useReducer(PrincipalReducer, {\r\n        options: {\r\n            idLanguage: 'en',\r\n            metric: 'standard',\r\n            metricSymbol: 'K'\r\n        },\r\n        myLocation: null,\r\n        myLocationWeather: null,\r\n        myLocationWeatherForecast: null,\r\n        loading: true\r\n    });\r\n\r\n    const setOptions = (objeto) => {\r\n        let data = {\r\n            idLanguage: objeto.idLang,\r\n            metric: objeto.metrica,\r\n            metricSymbol: objeto.simbolo\r\n        }\r\n        dispatch({\r\n            type: types.options,\r\n            data: {\r\n                options: data\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCurrentLocation = () => {\r\n        // console.log(\"getCurrentLocation ejecutado\");\r\n        getMyLocation().then(data => {\r\n            // console.log(\"DATA : \", data);\r\n            if (!data.message) {\r\n                // console.log(\"dentro de data\", data);\r\n                dispatch({\r\n                    type: types.myLocation,\r\n                    data: {\r\n                        myLocation: {\r\n                            ip: data.ip,\r\n                            country: data.country_name,\r\n                            stateProv: data.state_prov,\r\n                            countryFlag: data.country_flag,\r\n                            currentTime: data.time_zone.current_time_unix\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                console.log(\"getCurrentLocation error : \", data);\r\n            }\r\n        });\r\n    }\r\n\r\n    const getCurrentWeatherByLocation = (location) => {\r\n        // console.log(\"getCurrentWeatherByLocation ejecutado\");\r\n        getWeatherByLocation(location, state.options.metric, state.options.idLanguage).then(data => {\r\n            // console.log(\"DATA WEATHER BY LOCATION : \", data);\r\n            if (data) {\r\n                // console.log(\"aea\");\r\n                dispatch({\r\n                    type: types.myLocationWeather,\r\n                    data: {\r\n                        myLocationWeather: {\r\n                            longitude: data.coord.lon,\r\n                            latitude: data.coord.lat,\r\n                            temp: data.main.temp,\r\n                            tempMin: data.main.temp_min,\r\n                            tempMax: data.main.temp_max,\r\n                            feelsLike: data.main.feels_like,\r\n                            pressure: data.main.pressure,\r\n                            icon: data.weather[0].icon,\r\n                            description: data.weather[0].description,\r\n                            percentage: [\r\n                                {\r\n                                    title: 'Humidity',\r\n                                    value: data.main.humidity\r\n                                },\r\n                                {\r\n                                    title: 'Clouds',\r\n                                    value: data.clouds.all\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCurrentWeatherForecastByLocation = (lat, lon) => {\r\n        // console.log(\"getWeatherForecastByLocation ejecutado\");\r\n        getWeatherForecastByLocation(lat, lon, state.options.metric, state.options.idLanguage).then(data => {\r\n            // console.log(\"DATA WEATHER FORECAST BY LOCATION : \", data);\r\n            if (data) {\r\n                const newDaily = data.daily.filter((value, index) => {\r\n                    return index > 0 && index < data.daily.length - 1;\r\n                })\r\n                dispatch({\r\n                    type: types.myLocationWeatherForecast,\r\n                    data: {\r\n                        myLocationWeatherForecast: newDaily\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCurrentLocation();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (state.myLocation !== null) {\r\n            getCurrentWeatherByLocation(state.myLocation.stateProv, state.options.metric, state.options.idLanguage);\r\n        }\r\n    }, [state.myLocation, state.options])\r\n\r\n    useEffect(() => {\r\n        if (state.myLocationWeather !== null) {\r\n            getCurrentWeatherForecastByLocation(state.myLocationWeather.latitude, state.myLocationWeather.longitude, state.options.metric, state.options.idLanguage);\r\n        }\r\n    }, [state.myLocationWeather])\r\n\r\n\r\n    return (\r\n        <PrincipalContext.Provider value={{\r\n            options: state.options,\r\n            myLocation: state.myLocation,\r\n            myLocationWeather: state.myLocationWeather,\r\n            myLocationWeatherForecast: state.myLocationWeatherForecast,\r\n            loading: state.loading,\r\n            getCurrentWeatherForecastByLocation,\r\n            setOptions\r\n        }}>\r\n            {props.children}\r\n        </PrincipalContext.Provider>\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport React, { useContext } from 'react';\r\nimport PrincipalContext from './../principal/PrincipalContext';\r\n\r\nexport const HomePrincipalLocation = () => {\r\n    const { myLocation, loading } = useContext(PrincipalContext);\r\n\r\n    return (\r\n        <>\r\n            {!loading &&\r\n                <>\r\n                    <h1 className=\"display-4 text-center font-weight-bold\">\r\n                        <span>{myLocation.stateProv}</span>, <span>{myLocation.country}</span> <span><img src={myLocation.countryFlag} alt=\"country flag\" /></span>\r\n                    </h1>\r\n                    <h3 className=\"text-center\">{moment.unix(myLocation.currentTime).format('ddd, D MMM YYYY')}</h3>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","export const capitalizeLetter = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport PrincipalContext from './../principal/PrincipalContext';\r\nimport { capitalizeLetter } from './../helpers/capitalizeLetter';\r\nimport moment from 'moment';\r\n\r\nexport const HomePrincipalContainer = () => {\r\n\r\n    const { options, myLocation, myLocationWeather, loading } = useContext(PrincipalContext);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !loading &&\r\n                <>\r\n                    <div>\r\n                        <div className=\"principal-container\">\r\n                            <div className=\"principal-left\">\r\n                                <img className=\"principal-icon\" src={`http://openweathermap.org/img/wn/${myLocationWeather.icon}@4x.png`} alt=\"icono\" />\r\n                            </div>\r\n\r\n                            <div className=\"principal-right\">\r\n                                <ul>\r\n                                    <li className=\"list-temp text-center\"><span>{Math.round(myLocationWeather.temp)}</span> °<span>{options.metricSymbol}</span></li>\r\n                                    <li className=\"list-description text-center font-weight-bold\">{capitalizeLetter(myLocationWeather.description)}</li>\r\n                                    <li className=\"list-hour text-center\">Updated <span>{moment.unix(myLocation.currentTime).format('hh:mm a')}</span></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"principal-container-list\">\r\n                            <div className=\"principal-values col-lg-10 col-md-12 col-sm-12 col-12\">\r\n                                <ul className=\"principal-values-list col-md-12\">\r\n                                    <li className=\"col-md-4 col-sm-4 col-12 mb-3 text-center font-weight-bold\">\r\n                                        Pressure : <span>{myLocationWeather.pressure}</span> hPa\r\n                                    </li>\r\n                                    <li className=\"col-md-4 col-sm-4 col-12 mb-3 text-center font-weight-bold\">\r\n                                        Feels like : <span>{Math.round(myLocationWeather.feelsLike)}</span>°<span>{options.metricSymbol}</span>\r\n                                    </li>\r\n                                    <li className=\"col-md-4 col-sm-4 col-12 mb-3 text-center font-weight-bold\">\r\n                                        Temp : <span>{Math.round(myLocationWeather.tempMax)}</span>°<span>{options.metricSymbol}</span> / <span>{Math.round(myLocationWeather.tempMin)}</span>°<span>{options.metricSymbol}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { CircleProgress } from 'react-gradient-progress';\r\n\r\nexport const HomePrincipalPorcentajeCircularItem = ({ circular }) => {\r\n\r\n    return (\r\n        <div className=\"porcentaje-circular-item\">\r\n            <CircleProgress\r\n                percentage={circular.value}\r\n                strokeWidth={15}\r\n                strokeLinecap=\"butt\"\r\n                primaryColor={['#26B6DB', '#c1e1ee']}\r\n                secondaryColor=\"white\"\r\n                fontSize=\"35px\"\r\n            />\r\n            <div className=\"text-center font-weight-bold\">{circular.title}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { HomePrincipalPorcentajeCircularItem } from './HomePrincipalPorcentajeCircularItem';\r\nimport PrincipalContext from './../principal/PrincipalContext';\r\n\r\nexport const HomePrincipalPorcentajeCircular = () => {\r\n\r\n    const { myLocationWeather, loading } = useContext(PrincipalContext);\r\n\r\n    return (\r\n        <div className=\"porcentaje-circular\">\r\n            {\r\n                !loading && myLocationWeather.percentage.map((circular, id) => {\r\n                    return <HomePrincipalPorcentajeCircularItem key={id} circular={circular} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { capitalizeLetter } from './../helpers/capitalizeLetter';\r\n\r\nexport const HomePrincipalPronosticoSemanalItem = ({ forecast }) => {\r\n\r\n    const { dt, temp, weather } = forecast;\r\n\r\n    return (\r\n        <div className=\"forecast-item card text-center\" style={{ width: '10rem' }}>\r\n            <div className=\"card-body\">\r\n                <h3 className=\"font-weight-bold\">{moment.unix(dt).format('ddd')}</h3>\r\n                {/* <h6 className=\"font-weight-bold\">{moment.unix(dt).format('hh:mm a')}</h6> */}\r\n                <h3 className=\"\"><span className=\"forecast-temp-max\">{Math.round(temp.max)}°</span> / <span className=\"forecast-temp-min\">{Math.round(temp.min)}°</span></h3>\r\n                <img className=\"forecast-icon\" src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`} alt=\"\" />\r\n                <h6 className=\"forecast-description\">{capitalizeLetter(weather[0].description)}</h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { HomePrincipalPronosticoSemanalItem } from './HomePrincipalPronosticoSemanalItem';\r\nimport PrincipalContext from './../principal/PrincipalContext';\r\n\r\nexport const HomePrincipalPronosticoSemanal = () => {\r\n\r\n    const { myLocationWeatherForecast } = useContext(PrincipalContext);\r\n\r\n    // useEffect(() => {\r\n    //     if (myLocationWeather !== null) {\r\n    //         getCurrentWeatherForecastByLocation(myLocationWeather.latitude, myLocationWeather.longitude, \"metric\", \"es\");\r\n    //     }\r\n    // }, [myLocationWeather])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"forecast-container\">\r\n                {\r\n                    myLocationWeatherForecast !== null &&\r\n                    <>\r\n                        {\r\n                            myLocationWeatherForecast.map(forecast => {\r\n                                return <HomePrincipalPronosticoSemanalItem key={forecast.dt} forecast={forecast} />\r\n                            })\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n\r\n            {/* <div>\r\n                <p>LOCATION WEATHER FORECAST</p>\r\n                <pre>{JSON.stringify(myLocationWeatherForecast, null, 3)}</pre>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n","export const languages = [\r\n    {\r\n        id: 'af',\r\n        lang: 'Afrikaans'\r\n    },\r\n    {\r\n        id: 'al',\r\n        lang: 'Albanian'\r\n    },\r\n    {\r\n        id: 'ar',\r\n        lang: 'Arabic'\r\n    },\r\n    {\r\n        id: 'az',\r\n        lang: 'Azerbaijani'\r\n    },\r\n    {\r\n        id: 'bg',\r\n        lang: 'Bulgarian'\r\n    },\r\n    {\r\n        id: 'ca',\r\n        lang: 'Catalan'\r\n    },\r\n    {\r\n        id: 'cz',\r\n        lang: 'Czech'\r\n    },\r\n    {\r\n        id: 'da',\r\n        lang: 'Danish'\r\n    },\r\n    {\r\n        id: 'de',\r\n        lang: 'German'\r\n    },\r\n    {\r\n        id: 'el',\r\n        lang: 'Greek'\r\n    },\r\n    {\r\n        id: 'en',\r\n        lang: 'English'\r\n    },\r\n    {\r\n        id: 'eu',\r\n        lang: 'Basque'\r\n    },\r\n    {\r\n        id: 'fa',\r\n        lang: 'Persian'\r\n    },\r\n    {\r\n        id: 'fi',\r\n        lang: 'Finnish'\r\n    },\r\n    {\r\n        id: 'fr',\r\n        lang: 'French'\r\n    },\r\n    {\r\n        id: 'gl',\r\n        lang: 'Galician'\r\n    },\r\n    {\r\n        id: 'he',\r\n        lang: 'Hebrew'\r\n    },\r\n    {\r\n        id: 'hi',\r\n        lang: 'Hindi'\r\n    },\r\n    {\r\n        id: 'hr',\r\n        lang: 'Croatian'\r\n    },\r\n    {\r\n        id: 'hu',\r\n        lang: 'Hungarian'\r\n    },\r\n    {\r\n        id: 'id',\r\n        lang: 'Indonesian'\r\n    },\r\n    {\r\n        id: 'it',\r\n        lang: 'Italian'\r\n    },\r\n    {\r\n        id: 'ja',\r\n        lang: 'Japanese'\r\n    },\r\n    {\r\n        id: 'kr',\r\n        lang: 'Korean'\r\n    },\r\n    {\r\n        id: 'la',\r\n        lang: 'Latvian'\r\n    },\r\n    {\r\n        id: 'lt',\r\n        lang: 'Lithuanian'\r\n    },\r\n    {\r\n        id: 'mk',\r\n        lang: 'Macedonian'\r\n    },\r\n    {\r\n        id: 'no',\r\n        lang: 'Norwegian'\r\n    },\r\n    {\r\n        id: 'nl',\r\n        lang: 'Dutch'\r\n    },\r\n    {\r\n        id: 'pl',\r\n        lang: 'Polish'\r\n    },\r\n    {\r\n        id: 'pt',\r\n        lang: 'Portuguese'\r\n    },\r\n    {\r\n        id: 'pt_br',\r\n        lang: 'Português B'\r\n    },\r\n    {\r\n        id: 'ro',\r\n        lang: 'Romanian'\r\n    },\r\n    {\r\n        id: 'ru',\r\n        lang: 'Russian'\r\n    },\r\n    {\r\n        id: 'sv',\r\n        lang: 'Swedish'\r\n    },\r\n    {\r\n        id: 'sk',\r\n        lang: 'Slovak'\r\n    },\r\n    {\r\n        id: 'sl',\r\n        lang: 'Slovenian'\r\n    },\r\n    {\r\n        id: 'es',\r\n        lang: 'Spanish'\r\n    },\r\n    {\r\n        id: 'sr',\r\n        lang: 'Serbian'\r\n    },\r\n    {\r\n        id: 'th',\r\n        lang: 'Thai'\r\n    },\r\n    {\r\n        id: 'tr',\r\n        lang: 'Turkish'\r\n    },\r\n    {\r\n        id: 'ua',\r\n        lang: 'Ukrainian'\r\n    },\r\n    {\r\n        id: 'vi',\r\n        lang: 'Vietnamese'\r\n    },\r\n    {\r\n        id: 'zh_cn',\r\n        lang: 'Chinese S'\r\n    },\r\n    {\r\n        id: 'zh_tw',\r\n        lang: 'Chinese T'\r\n    },\r\n    {\r\n        id: 'zu',\r\n        lang: 'Zulu'\r\n    }\r\n]","import React, { memo } from 'react';\r\n\r\nexport const FormularioLanguageItems = memo(({ language }) => {\r\n    // console.log(\"language items\");\r\n    return (\r\n        <option value={language.id}>{language.lang}</option>\r\n    )\r\n})\r\n","import React, { useContext, useState } from 'react';\r\nimport { languages } from './../options/language';\r\nimport { FormularioLanguageItems } from './FormularioLanguageItems';\r\nimport PrincipalContext from './../principal/PrincipalContext';\r\n\r\nexport const FormularioOptions = () => {\r\n\r\n    const { options, setOptions } = useContext(PrincipalContext);\r\n    const { metric, metricSymbol, idLanguage } = options;\r\n    const [formulario, setFormulario] = useState({\r\n        idLang: idLanguage,\r\n        simbolo: metricSymbol,\r\n        metrica: metric\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        let valor = e.target.value;\r\n        let simb = \"\";\r\n\r\n        if (e.target.name === 'metrica') {\r\n            switch (valor) {\r\n                case 'metric':\r\n                    simb = 'C';\r\n                    setFormulario({\r\n                        ...formulario,\r\n                        [e.target.name]: valor,\r\n                        simbolo: simb\r\n                    });\r\n                    break;\r\n\r\n                case 'imperial':\r\n                    simb = 'F';\r\n                    setFormulario({\r\n                        ...formulario,\r\n                        [e.target.name]: valor,\r\n                        simbolo: simb\r\n                    });\r\n                    break;\r\n\r\n                default:\r\n                    simb = 'K';\r\n                    setFormulario({\r\n                        ...formulario,\r\n                        [e.target.name]: valor,\r\n                        simbolo: simb\r\n                    });\r\n                    break;\r\n            }\r\n        } else {\r\n            setFormulario({\r\n                ...formulario,\r\n                [e.target.name]: valor,\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setOptions(formulario);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-inline d-flex justify-content-center\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <div className=\"form-group mx-sm-3 mb-2\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name='metrica'\r\n                        value={formulario.metrica}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option value=\"metric\">°C</option>\r\n                        <option value=\"imperial\">°F</option>\r\n                        <option value=\"standard\">°K</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"form-group mx-sm-3 mb-2\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name='idLang'\r\n                        value={formulario.idLang}\r\n                        onChange={handleChange}\r\n                    >\r\n                        {\r\n                            languages.map(language => {\r\n                                return <FormularioLanguageItems key={language.id} language={language} />\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" className=\"btn btn-primary mb-2\">OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { HomePrincipalLocation } from './../components/HomePrincipalLocation';\r\nimport { HomePrincipalContainer } from '../components/HomePrincipalContainer';\r\nimport { HomePrincipalPorcentajeCircular } from '../components/HomePrincipalPorcentajeCircular';\r\nimport { HomePrincipalPronosticoSemanal } from '../components/HomePrincipalPronosticoSemanal';\r\nimport { FormularioOptions } from './../components/FormularioOptions';\r\n\r\nimport '../App.css';\r\n\r\nexport const HomeScreen = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-2\">\r\n                <FormularioOptions />\r\n                <HomePrincipalLocation />\r\n\r\n                <div>\r\n                    <HomePrincipalContainer />\r\n\r\n                    <HomePrincipalPorcentajeCircular />\r\n\r\n                    {/* PRONOSTICO DE LA SEMANA */}\r\n                    <HomePrincipalPronosticoSemanal />\r\n\r\n                </div>\r\n\r\n                {/* <div>\r\n                    <p>LOCATION</p>\r\n                    <pre>{JSON.stringify(myLocation, null, 3)}</pre>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>LOCATION WEATHER</p>\r\n                    <pre>{JSON.stringify(myLocationWeather, null, 3)}</pre>\r\n                </div> */}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { HomeScreen } from '../screens/HomeScreen';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path={\"/\"} component={HomeScreen} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { PrincipalState } from './principal/PrincipalState';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <PrincipalState>\r\n            <AppRouter />\r\n        </PrincipalState>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}